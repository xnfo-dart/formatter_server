name: Release on TAG

###
#  Builds native executables for [linux,windows,mac] when a semantic release tag is pushed.
#  Renames the output files separately based on OS and uploads ready for release.
#  Finally deletes temporary artifacts
#    release.yml is automatically called when this finishes.


# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
run-name: "Build: [on ${{ github.ref_type }}: ${{ github.ref_name }}]"

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  # Allows you to run this workflow manually from the Actions tab (for testing)
#  workflow_dispatch:
#    inputs:
#      versionName:
#        description: 'Name of version  (ie v1.2.3) same as tag name'
#        required: false

jobs:

  build:
    name: "Compile native executables"
    uses: ./.github/workflows/build.yml
# If null, will use ref_name from this event, wich is a tag name.
#    with:
#      target: --last-release
    secrets: inherit


  release-binaries:
    name: "Upload native executables"
    needs: [build]
    if: needs.build.result == 'success'

    runs-on: ubuntu-latest

    steps:

      - name: "Download build artifacts"
        uses: actions/download-artifact@v3
        with:
          name: native-executables

      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename and move files
        run: |
          mkdir -p ./bin/linux
          mv dartpolishd-linux bin/linux/dartpolishd
          mkdir -p ./bin/windows
          mv dartpolishd-windows.exe bin/windows/dartpolishd.exe
          mkdir -p ./bin/mac
          mv dartpolishd-mac bin/mac/dartpolishd

      - name: Display structure of moved files.
        run: ls -R

      # https://github.com/actions/upload-artifact#zipped-artifact-downloads
      # - name: "Upload OS Artifacts"
      #   uses: actions/upload-artifact@v3.1.0
      #   with:
      #     name: dartpolishd-executables
      #     path: bin

      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dartpolishd-linux
          path: bin/linux

      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dartpolishd-windows
          path: bin/windows

      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dartpolishd-mac
          path: bin/mac

      # delete temporary artifacts
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            dartpolishd-executables
            native-executables

# NOTE: ./release.yml is run after this finishes successfully.

# Uneccesarily slow.
#
#   make-artifacts:

#     needs: [rename-files]
#     if: needs.rename-files.result == 'success'

#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         osname: [linux, windows, mac]

#     steps:
#       # Download artifact
#       - name: "Download build artifacts"
#         uses: actions/download-artifact@v3
#         with:
#           name: dartpolishd-executables

#       - name: Display structure of downloaded files.
#         run: ls -R

#       # Make a diferent artifact for each native executable.
#       - name: "Upload OS Artifacts"
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: dartpolishd-${{ matrix.osname }}
#           path: ${{ matrix.osname }}


#   delete-temp-artifacts:
#     needs: [make-artifacts]

#     runs-on: ubuntu-latest

#     steps:
#       # delete temporary artifacts
#       - uses: geekyeggo/delete-artifact@v2
#         with:
#           name: |
#             dartpolishd-executables
#             native-executables
