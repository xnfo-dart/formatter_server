name: On Release Tag

###
# FLOW: ( [onRelTAG] -> [Build] ) -> [Release]
#
#  Builds native executables for [linux,windows,mac] when a semantic release tag is pushed.
#  Renames the output files based on OS and uploads each one separately rdy for release.
#  Finally deletes temporary artifacts
#    release.yml is automatically called when this finishes.

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
run-name: "${{ github.workflow }}: [on ${{ github.event_name != 'workflow_dispatch' && github.ref_type || 'workflow_dispatch' }}] [ref: ${{ github.ref_name }}]"

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

  # Builds selected ref
  workflow_dispatch:

jobs:

  build:
    # If you use the second syntax option (without {owner}/{repo} and @{ref}) the called workflow is from the same commit as the caller workflow.
    name: "Compile native executables"
    uses: ./.github/workflows/build.yml
    secrets: inherit

  release-binaries:
    name: "Upload native executables"
    needs: [build]
    if: needs.build.result == 'success'

    runs-on: ubuntu-latest

    steps:

      - name: "Download build artifacts"
        uses: actions/download-artifact@v3
        with:
          name: native-executables

      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename and move files
        run: |
          BIN_NAME="dartpolishd"
          OS_ARRAY="linux windows mac"
          for OS in $OS_ARRAY
          do
              mkdir -p ./bin/$OS
              if [[ "$OS" == "windows" ]]; then
                  mv $BIN_NAME-$OS.exe bin/$OS/$BIN_NAME.exe
              else
                  mv $BIN_NAME-$OS bin/$OS/$BIN_NAME
              fi
              cp LICENSE bin/$OS/
          done

      - name: Display structure of moved files.
        run: ls -R

      # https://github.com/actions/upload-artifact#zipped-artifact-downloads
      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.1
        with:
          name: dartpolishd-linux
          path: bin/linux
          retention-days: 5

      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.1
        with:
          name: dartpolishd-windows
          path: bin/windows
          retention-days: 5

      # Make a diferent artifact for each native executable.
      - name: "Upload OS Artifacts"
        uses: actions/upload-artifact@v3.1.1
        with:
          name: dartpolishd-mac
          path: bin/mac
          retention-days: 5

      # delete temporary artifacts
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            native-executables

# NOTE: ./release.yml is run after this finishes successfully.
